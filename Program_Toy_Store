import os
from prettytable import PrettyTable

os.system("cls")

class Admin:
    def init(self):
        self.products = []

    def create_product(self, name, price):
        self.products.append({'name': name, 'price': price})
        print(f"Produk {name} berhasil ditambahkan.")

    def read_products(self):
        if not self.products:
            print("Belum ada produk yang tersedia.")
        else:
            table = PrettyTable(['No', 'Nama Produk', 'Harga'])
            for idx, product in enumerate(self.products, 1):
                table.add_row([idx, product['name'], f"Rp {product['price']}"])
            print(table)

    def update_product(self, idx, name, price):
        if 1 <= idx <= len(self.products):
            self.products[idx - 1]['name'] = name
            self.products[idx - 1]['price'] = price
            print(f"Produk {name} berhasil diperbarui.")
        else:
            print("Indeks produk tidak valid.")

    def delete_product(self, idx):
        if 1 <= idx <= len(self.products):
            deleted_product = self.products.pop(idx - 1)
            print(f"Produk {deleted_product['name']} berhasil dihapus.")
        else:
            print("Indeks produk tidak valid.")

class Pembeli:
    def init(self):
        self.cart = []

    def add_to_cart(self, product):
        self.cart.append(product)
        print(f"Produk {product['name']} ditambahkan ke keranjang.")

    def view_cart(self):
        if not self.cart:
            print("Keranjang kosong.")
        else:
            table = PrettyTable(['No', 'Nama Produk', 'Harga'])
            for idx, product in enumerate(self.cart, 1):
                table.add_row([idx, product['name'], f"Rp {product['price']}"])
            print(table)

    def checkout(self):
        if not self.cart:
            print("Keranjang kosong. Tidak ada yang bisa di-checkout.")
            return
        
        total = sum(product['price'] for product in self.cart)
        print(f"Total harga: Rp {total}")
        
        while True:
            try:
                bayar = float(input("Masukkan jumlah uang yang dibayarkan: Rp "))
                if bayar < total:
                    print("Jumlah uang yang dibayarkan kurang dari total harga.")
                else:
                    kembalian = bayar - total
                    print(f"Uang kembalian: Rp {kembalian}")
                    self.cart.clear()
                    print("Keranjang dikosongkan. Terima kasih telah berbelanja!")
                    break
            except ValueError:
                print("Masukkan jumlah uang yang valid.")

def login(username, password):
    return username == "admin" and password == "admin123", username == "pembeli" and password == "pembeli123"

admin = Admin()
pembeli = Pembeli()

admin.create_product("Teddy Bear", 60000)
admin.create_product("Robot", 50000)
admin.create_product("Puzzle", 15000)
admin.create_product("Lego", 20000)
admin.create_product("Boneka Barbie", 80000)
admin.create_product("Catur", 25000)

while True:
    print("\nMenu Utama:")
    print("1. Masuk sebagai Admin")
    print("2. Masuk sebagai Pembeli")
    print("3. Keluar")
    choice = input("Pilih peran Anda (1/2/3): ")

    if choice == '1':
        username = input("Masukkan username Admin: ")
        password = input("Masukkan password Admin: ")
        admin_login, pembeli_login = login(username, password)

        if admin_login:
            while True:
                # Admin actions (similar to your previous code)
                pass
        else:
            print("Login Admin gagal. Coba lagi.")

    elif choice == '2':
        username = input("Masukkan username Pembeli: ")
        password = input("Masukkan password Pembeli: ")
        admin_login, pembeli_login = login(username, password)

        if pembeli_login:
            while True:
                # Pembeli actions (similar to your previous code)
                pass
        else:
            print("Login Pembeli gagal. Coba lagi.")
    elif choice == '3':
        break
    else:
        print("Pilihan tidak valid. Silakan pilih kembali.")
